name: "AudioNet"

#------------------------------------------------------------------------------

layer {
  name: "data"
  type: "HDF5Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
    
  hdf5_data_param {
    source: "<path_to_test_data>"
    batch_size: 100
  }

}

#------------------------------------------------------------------------------

layer {
  name: "label_slicer"
  type: "Slice"
  bottom: "label"
  top: "label_digit"
  top: "label_gender"
  slice_param {
    axis: 1
    slice_point: 1
  }
}

#------------------------------------------------------------------------------

layer {
  name: "silence_layer"
  type: "Silence"
  bottom: "<silent_label>"
}

#------------------------------------------------------------------------------


layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 100
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  # 8000 x 32
}

layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}

#------------------------------------------------------------------------------

layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    pad_h: 0
    pad_w: 0
    kernel_h: 1
    kernel_w: 3
    stride: 2
  }
  # 4000 x 32
}

#------------------------------------------------------------------------------

layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 64
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  # 4000 x 64
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}

#------------------------------------------------------------------------------

layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    pad_h: 0
    pad_w: 0
    kernel_h: 1
    kernel_w: 2
    stride: 2
  }
  # 2000 x 64
}

#------------------------------------------------------------------------------

layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
  # 2000 x 128
}

#------------------------------------------------------------------------------

layer {
  name: "pool3"
  type: "Pooling"
  bottom: "conv3"
  top: "pool3"
  pooling_param {
    pool: MAX
    pad_h: 0
    pad_w: 0
    kernel_h: 1
    kernel_w: 2
    stride: 2
  }
  # 1000 x 128
}

#------------------------------------------------------------------------------

layer {
  name: "conv4"
  type: "Convolution"
  bottom: "pool3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
  # 1000 x 128
}

#------------------------------------------------------------------------------

layer {
  name: "pool4"
  type: "Pooling"
  bottom: "conv4"
  top: "pool4"
  pooling_param {
    pool: MAX
    pad_h: 0
    pad_w: 0
    kernel_h: 1
    kernel_w: 2
    stride: 2
  }
  # 500 x 128
}

#------------------------------------------------------------------------------

layer {
  name: "conv5"
  type: "Convolution"
  bottom: "pool4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
  # 500 x 128
}

#------------------------------------------------------------------------------

layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    pad_h: 0
    pad_w: 0
    kernel_h: 1
    kernel_w: 2
    stride: 2
  }
  # 250 x 128
}

#------------------------------------------------------------------------------

layer {
  name: "conv6"
  type: "Convolution"
  bottom: "pool5"
  top: "conv6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  convolution_param {
    num_output: 128
    pad_h: 0
    pad_w: 1
    kernel_h: 1
    kernel_w: 3
    stride: 1
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "conv6"
  top: "conv6"
  # 250 x 128
}

#------------------------------------------------------------------------------

layer {
  name: "pool6"
  type: "Pooling"
  bottom: "conv6"
  top: "pool6"
  pooling_param {
    pool: MAX
    pad_h: 0
    pad_w: 0
    kernel_h: 1
    kernel_w: 2
    stride: 2
  }
  # 125 x 128
}

#------------------------------------------------------------------------------

layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "pool6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

#------------------------------------------------------------------------------

layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}

#------------------------------------------------------------------------------

layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

#------------------------------------------------------------------------------

layer {
  name: "drop8"
  type: "Dropout"
  bottom: "fc8"
  top: "fc8"
  dropout_param {
    dropout_ratio: 0.5
  }
}

#------------------------------------------------------------------------------

layer {
  name: "fc9"
  type: "InnerProduct"
  bottom: "fc8"
  top: "fc9"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: <num_output>
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

#------------------------------------------------------------------------------

layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fc9"
  bottom: "<nonsilent_label>"
  top: "accuracy"
}

#------------------------------------------------------------------------------

layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc9"
  bottom: "<nonsilent_label>"
  top: "loss"
}
